@use '~sass-true' as test
@use './index' as mixin

// Shorthand to define max, min and eq width.
+test.describe('Width mixin')
  +test.it('should define width with args')
    +test.assert
      +test.output
        +mixin.width(15px, min 10px)
      +test.expect
        width: 15px
        min-width: 10px

  +test.it('should define width with list arg')
    +test.assert
      +test.output
        +mixin.width([15px, min 10px])
      +test.expect
        width: 15px
        min-width: 10px

// Shorthand to define max, min and eq height.
+test.describe('Height mixin')
  +test.it('should define height with args')
    +test.assert
      +test.output
        +mixin.height(15px, min 10px)
      +test.expect
        height: 15px
        min-height: 10px

  +test.it('should define height with list arg')
    +test.assert
      +test.output
        +mixin.height([15px, min 10px])
      +test.expect
        height: 15px
        min-height: 10px

// Shorthand to define complex width and height.
+test.describe('Size mixin')
  +test.it('should define size with arg')
    +test.assert
      +test.output
        +mixin.size(1px)
      +test.expect
        width: 1px
        height: 1px

  +test.it('should define width and height with args')
    +test.assert
      +test.output
        +mixin.size(1px, 2px)
      +test.expect
        width: 1px
        height: 2px

  +test.it('should define complex width and height with args')
    +test.assert
      +test.output
        +mixin.size([auto, min 20px], [10px, max 30px])
      +test.expect
        width: auto
        min-width: 20px
        height: 10px
        max-height: 30px
