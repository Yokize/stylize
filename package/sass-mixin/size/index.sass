@use '~@stylize/sass-func/meta'
@use '~@stylize/sass-func/list'

////
/// @group size
/// @author Nojukubi
////

/// Shorthand to define max, min and eq width.
/// @param {List} $props Width Props.
/// @example
///   width([min 10px])
///   width([min 10px, max 30px])
=width($props: [])

/// Shorthand to define max, min and eq width.
/// @param {ArgList} $props Width Props.
/// @example
///   width(10px)
///   width(min 10px)
///   width(min 10px, max 30px)
=width($props...)
  +-unpack-value-(width, $props)

/// Shorthand to define max, min and eq height.
/// @param {List} $props Height Props.
/// @example
///   height(10px)
///   height(min 10px)
///   height(min 10px, max 30px)
=height($props: [])

/// Shorthand to define max, min and eq height.
/// @param {ArgList} $props Height Props.
/// @example
///   height(10px)
///   height(min 10px)
///   height(min 10px, max 30px)
=height($props...)
  +-unpack-value-(height, $props)

/// Shorthand to define complex width and height.
/// @param {List|Length} $width [null] Width.
/// @param {List|Length} $height [null] Height.
/// @example
///   size(10px)
///   size(min 10px)
///   size(min 10px, max 20px)
///   size([30px, min 10px], max 20px)
///   size([30px, min 10px], [min 10px, max 20px])
=size($width: null, $height: $width)
  +width($width)
  +height($height)

/// Unpack property value with prefix support.
/// @param {String} $prop Prop name.
/// @param {List|String} $value Value.
=-unpack-value-($prop, $value)
  @if list.has-single($value) and not meta.is-list($value)
    #{$prop}: $value
  @else
    $prefix: list.first($value)
    // In case the prefix is specified.
    @if ($prefix == min or $prefix == max)
      #{$prefix}-#{$prop}: list.nth($value, 2)
    @else
      @each $chunk in $value
        +-unpack-value-($prop, $chunk)
