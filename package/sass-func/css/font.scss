@use '../list';

/// Base safe font
/// @author Nojukubi
/// @group font
$base-font: Arial, Helvetica, sans-serif !default;

/// Create font property value
/// @param {List} $props - Font Props
/// @author Nojukubi
/// @group font
/// @example
///   font(10px)
///   font(10px 16px)
///   font(10px normal 300)
///   font(10px normal 300 (Arial Helvetica))
@function font($props: []) {
  // Autocomplete purpose
}

/// Create font property value
/// @param {String | Length} $size [inherit] - Font Size
/// @param {String | Length} $line [normal] - Line Height
/// @param {String | Number} $weight [normal] - Font Weight
/// @param {String | List} $family [$base-font] - Font Family
/// @author Nojukubi
/// @group font
/// @example
///   font(10px)
///   font(10px, 16px)
///   font(10px, normal, 300)
///   font(10px, normal, 300, Arial Helvetica)
@function font($size: inherit, $line: normal, $weight: normal, $family: $base-font) {
  @return -font-($size, $line, $weight, $family);
}

/// Internal helper to generate font property value
/// @ignore
@function -font-($size: inherit, $line: normal, $weight: normal, $family: $base-font, $other-family...) {
  @if list.has-multiple($size) {
    @return -font-($size...);
  } @else {
    @return normal normal #{$weight} #{$size} / #{$line} #{list.to-string(list.join($family, $other-family), ', ')};
  }
}
