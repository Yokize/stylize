@use 'sass:meta';
@forward 'sass:meta';

/// Determine whether $var is list type
/// @param {Any} $var - Var to check
/// @return {Bool} True in the case of list; otherwise false
/// @author Nojukubi
/// @group meta
/// @example
///   is-list(item1 item2)
@function is-list($var) {
  @return meta.type-of($var) == 'list';
}

/// Determine whether $var is map type
/// @param {Any} $var - Var to check
/// @return {Bool} True in the case of map; otherwise false
/// @author Nojukubi
/// @group meta
/// @example
///   is-map((1: item1, 2: item2))
@function is-map($var) {
  @return meta.type-of($var) == 'map';
}

/// Determine whether $var is number type
/// @param {Any} $var - Var to check
/// @return {Bool} True in the case of number; otherwise false
/// @author Nojukubi
/// @group meta
/// @example
///   is-number(1px)
///   is-number(1000)
@function is-number($var) {
  @return meta.type-of($var) == 'number';
}

/// Determine whether $var is string type
/// @param {Any} $var - Var to check
/// @return {Bool} True in the case of string; otherwise false
/// @author Nojukubi
/// @group meta
/// @example
///   is-string(str)
@function is-string($var) {
  @return meta.type-of($var) == 'string';
}
