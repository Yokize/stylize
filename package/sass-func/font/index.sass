@use 'sass:string'
@use '../list'

////
/// @group font
/// @author Nojukubi
/// @source https://developer.mozilla.org/en-US/docs/Web/CSS/font
////

/// Configurable base family.
/// @type List
$base-family: Arial, sans-serif !default

/// Create the value for font property.
/// @param {List} $props Font Props.
/// @return {String} Value for font property.
/// @example
///   font(10px)
///   font(10px 16px)
///   font(10px normal 300)
///   font(10px normal 300 (Arial Helvetica))
@function font($props: [])

/// Create the value for font property.
/// @param {String|Length} $size [medium] Font Size.
/// @param {String|Length} $line [normal] Line Height.
/// @param {String|Number} $weight [normal] Font Weight.
/// @param {String|List} $family [null] Font Family.
/// @return {String} Value for font property.
/// @example
///   font(10px)
///   font(10px, 16px)
///   font(10px, normal, 300)
///   font(10px, normal, 300, Arial Helvetica)
///   font($size: 10px, $line: 1, $weight: 300)
@function font($size: medium, $line: normal, $weight: normal, $family: null)
  // In case $size is not a list can proceed with creating the value.
  @if list.has-single($size)
    // If $family is not defined use default; otherwise normalize arg.
    $family: if($family == null, $base-family, list.to-string($family, ', '))
    // Create the value for font property based on the defined args.
    @return string.unquote('normal normal #{$weight} #{$size} / #{$line} #{$family}')
  @else
    // $size argument can be a list to support signature with props.
    @return font($size...)
